name: Build AllMusic 1.21.7 Fabric

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ROOT_DIR: /home/runner/work/AllMusic_Client/AllMusic_Client
      GRADLE_VERSION: "8.5"
      LOOM_VERSION: "1.6.5"
      YARN_VERSION: "1.21.7+build.15"

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 清理旧环境
        run: |
          sudo apt-get purge -y gradle
          sudo rm -rf /usr/share/gradle/
          rm -rf ~/.gradle/ ~/.cache/gradle/
          rm -rf ${{ env.ROOT_DIR }}/.gradle/ ${{ env.ROOT_DIR }}/gradle/
          rm -f ${{ env.ROOT_DIR }}/gradlew* ${{ env.ROOT_DIR }}/*.gradle
          if command -v gradle &> /dev/null; then
              echo "错误：未彻底清理旧Gradle" && exit 1
          fi

      - name: 配置Java 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: none

      - name: 安装Gradle ${{ env.GRADLE_VERSION }}
        run: |
          wget "https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip" -O gradle.zip
          unzip -q gradle.zip -d /opt/
          echo "GRADLE_HOME=/opt/gradle-${GRADLE_VERSION}" >> $GITHUB_ENV
          echo "/opt/gradle-${GRADLE_VERSION}/bin" >> $GITHUB_PATH
          source $GITHUB_ENV
          ACTUAL=$(gradle --version | grep "Gradle" | awk '{print $2}')
          if [ "$ACTUAL" != "$GRADLE_VERSION" ]; then
              echo "版本不匹配：$ACTUAL vs $GRADLE_VERSION" && exit 1
          fi

      - name: 创建Gradle配置文件
        run: |
          cd ${{ env.ROOT_DIR }}
          
          cat > settings.gradle << 'EOF'
          pluginManagement {
              repositories {
                  maven { url "https://maven.fabricmc.net/" }
                  gradlePluginPortal()
              }
              plugins {
                  id 'fabric-loom' version '1.6.5'
              }
          }
          rootProject.name = "allmusic-client"
          EOF

          cat > build.gradle << 'EOF'
          plugins {
              id 'fabric-loom'
              id 'java'
              id 'maven-publish'
          }

          repositories {
              maven { url "https://maven.fabricmc.net/" }
              mavenCentral()
          }

          version = project.mod_version
          group = project.maven_group

          dependencies {
              minecraft "com.mojang:minecraft:${minecraft_version}"
              mappings "net.fabricmc:yarn:${yarn_mappings}:v2"
              modImplementation "net.fabricmc:fabric-loader:${loader_version}"
              modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
          }

          java {
              sourceCompatibility = JavaVersion.VERSION_21
              targetCompatibility = JavaVersion.VERSION_21
              withSourcesJar()
          }

          tasks.withType(JavaCompile).configureEach {
              options.encoding = "UTF-8"
          }

          loom {
              remapJar { enabled = true }
          }
          EOF

          cat > gradle.properties << 'EOF'
          minecraft_version=1.21.7
          yarn_mappings=1.21.7+build.15
          loader_version=0.16.15
          fabric_version=0.110.1+1.21.7
          mod_version=3.0.7
          maven_group=com.coloryr
          archives_base_name=allmusic-client
          EOF

      - name: 生成Gradle Wrapper
        run: |
          cd ${{ env.ROOT_DIR }}
          /opt/gradle-${GRADLE_VERSION}/bin/gradle wrapper \
            --gradle-version $GRADLE_VERSION \
            --distribution-type bin \
            --no-daemon
          chmod +x gradlew
          if ! grep -q "$GRADLE_VERSION" gradle/wrapper/gradle-wrapper.properties; then
              echo "Wrapper版本错误" && exit 1
          fi

      - name: 执行构建
        run: |
          cd ${{ env.ROOT_DIR }}
          ./gradlew clean build --stacktrace \
            -Porg.gradle.problems.throw-uncaught=true

      - name: 上传产物
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: AllMusic-1.21.7-Fabric
          path: ${{ env.ROOT_DIR }}/build/libs/*.jar

      - name: 上传错误日志
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-errors
          path: |
            ${{ env.ROOT_DIR }}/build/reports/**/*
            ${{ env.ROOT_DIR }}/.gradle/**/*
